,legendIntervals="data"
,legendMar = 2))
mapParams <- mapCountryData(sPDF,
nameColumnToPlot="gdpPercap",
addLegend=T,
colourPalette=colourPalette )
do.call(addMapLegend
,c(mapParams
,legendLabels="all"
,legendWidth=0.5
,legendIntervals="data"
,legendMar = 2))
df$countrycode <- countrycode(df$country, 'country.name', 'iso3c')
sPDF <- joinCountryData2Map(df %>% filter(year == 2007)
,joinCode = "ISO3"
,nameJoinColumn = "countrycode"
,mapResolution = "coarse"
, verbose = T)
colourPalette <- brewer.pal(7,'GnBu')
mapParams <- mapCountryData(sPDF,
nameColumnToPlot="gdpPercap",
addLegend=F,
colourPalette=colourPalette )
do.call(addMapLegend
,c(mapParams
,legendLabels="all"
,legendWidth=0.5
,legendIntervals="data"
,legendMar = 2))
library(plotly)
countries <- c("Kenya","Uganda","Tanzania","Nigeria","Ethiopia","Egypt","SouthAfrica","USA","Brazil","Britain","China","India")
#describe(df)
Graph <- df %>% filter(country %in% countries) %>% ggplot(aes(x = year,y =gdpPercap,color = country))+geom_line()+labs(title = "GDP growth rates over the years")+theme(plot.title = element_text(hjust = 0.5))
ggplotly(Graph)
gap2007 <- df %>% filter(year == 2007)
gap2007 %>% arrange(-gdpPercap) %>% head(10) %>% select(country, gdpPercap)
gap2007 <- df %>% filter(year == 2007)
gap2007 %>% arrange(-gdpPercap) %>% head(10) %>% select(country, gdpPercap) %>% kable()
#describe(df)
Graph <- df %>% filter(country %in% countries) %>% ggplot(aes(x = year,y =gdpPercap,color = country))+geom_line()+labs(title = "GDP growth rates over the years")+theme(plot.title = element_text(hjust = 0.5)) + geom_point(color='#21618C')
library(plotly)
countries <- c("Kenya","Uganda","Tanzania","Nigeria","Ethiopia","Egypt","SouthAfrica","USA","Brazil","Britain","China","India")
#describe(df)
Graph <- df %>% filter(country %in% countries) %>% ggplot(aes(x = year,y =gdpPercap,color = country))+geom_line()+labs(title = "GDP growth rates over the years")+theme(plot.title = element_text(hjust = 0.5)) + geom_point(color='#21618C')
ggplotly(Graph)
library(plotly)
countries <- c("Kenya","Uganda","Tanzania","Nigeria","Ethiopia","Egypt","SouthAfrica","USA","Brazil","Britain","China","India")
#describe(df)
Graph <- df %>% filter(country %in% countries) %>% ggplot(aes(x = year,y =gdpPercap,color = country))+geom_line()+labs(title = "GDP growth rates over the years")+theme(plot.title = element_text(hjust = 0.5)) + geom_point()
ggplotly(Graph)
gap2007 %>% arrange(-gdpPercap) %>% head(10) %>% select(country, gdpPercap) %>% ggplot(aes(x = country,y = gdpPercap))+geom_bar()
gap2007 <- df %>% filter(year == 2007)
gap2007 %>% arrange(-gdpPercap) %>% head(10) %>% select(country, gdpPercap) %>% ggplot(aes(x = country,y = gdpPercap))+geom_bar()
gap2007 <- df %>% filter(year == 2007)
gap2007 %>% arrange(-gdpPercap) %>% head(10) %>% select(country, gdpPercap) %>% ggplot(aes(x = country,y = gdpPercap))+geom_bar(stat = "identity")
gap2007 %>% arrange(-gdpPercap) %>% head(10) %>% select(country, gdpPercap) %>% ggplot(aes(x = country,y = gdpPercap))+geom_bar(stat = "identity")+coord_flip()
gap2007 %>% arrange(-gdpPercap) %>% head(10) %>% select(country, gdpPercap) %>% ggplot(aes(x = country,y = sort(gdpPercap)))+geom_bar(stat = "identity")+coord_flip()
count <- gap2007 %>% arrange(-gdpPercap) %>% head(10) %>% select(country, gdpPercap)
count
count$country
gap2007 <- df %>% filter(year == 2007)
count <- gap2007 %>% arrange(-gdpPercap) %>% head(10) %>% select(country, gdpPercap)
count$country <- factor(count$country)
count%>% ggplot(aes(x = country,y = gdpPercap))+geom_bar(stat = "identity")+coord_flip()
gap2007 <- df %>% filter(year == 2007)
count <- gap2007 %>% arrange(-gdpPercap) %>% head(10) %>% select(country, gdpPercap)
count$country <- factor(count$country)
count%>% ggplot(aes(x = sort(country),y = gdpPercap))+geom_bar(stat = "identity")+coord_flip()
nested <= gdp %>% group_by(country) %>% nest()
nested <= gdp %>% group_by(country,continent) %>% nest()
library(tidyverse)
nested <= gdp %>% group_by(country) %>% nest()
nested <- gdp %>% group_by(country) %>% nest()
nested <- df %>% group_by(country) %>% nest()
nested
nested$data
nested$data[1]
library(tidyverse)
nested <- df %>% group_by(country) %>% nest()
nested$data[1]
reg <- function(df){
lm(gdpPercap~year,data = df)
}
x <- nested$data[1:4]
map(reg,x)
map(reg,x[1])
x[1]
return(m)
reg <- function(df){
m = lm(gdpPercap~year,data = df)
return(m)
}
reg(x[1])
x[1]
x[1]$gdpPercap
str(x[1])
class(x[1])
data.frame(x[1])
map(nested$data,reg)
x  = nested %>% mutate(model = map(data,reg),
coef = broom::tidy(map(data,reg)))
x  = nested %>% mutate(model = map(data,reg),
coef = map(model,broom::tidy))
Models  = nested %>% mutate(model = map(data,reg),
coef = map(model,broom::tidy))
models
Models  = nested %>% mutate(model = map(data,reg),
coef = map(model,broom::tidy))
Models
Models$coef
Models$coe[1]
Models$coef[1]
Models$coef[2]
Models$coef[3]
knitr::opts_chunk$set(echo = F,message =F,warning  =F)
library(gapminder)
ggplot(gapminder, aes(year, lifeExp, group = country)) +
geom_line(alpha = 0.25)
# one Country
au <- filter(gapminder, country == "Australia")
ggplot(au,aes(year, lifeExp)) + geom_line()
au.lm <- lm(lifeExp ~ year, data = au)
summary(au.lm)
# nest the dataframes such that each country has its own dataset subset
gapminder.nested  <- gapminder %>%
group_by(country, continent) %>%
nest()
gapminder.nested
# how to get the nested data
gapminder.nested$data[3]
# create a function for paralell model creation
country_model <- function(df) {
lm(lifeExp ~ year, data = df)
}
gapminder.model  <- gapminder.nested %>%
mutate(model = map(data, country_model),
coef = map(model, broom::tidy))
gapminder.model$coef[[1]]
# unnest the dataframe
gapminder.coef  <- gapminder.model %>% unnest(coef)
gapminder.coef
gapminder.coef %>%
mutate(term = fct_recode(term,
Intercept = "(Intercept)",
Slope = "year")) %>%
ggplot(aes(estimate, fill = term)) +
geom_density(show.legend = FALSE, alpha = 0.5) +
geom_histogram(col = "black", fill = "lightgrey",
alpha = 0.5,
aes(y = ..density..)) +
facet_wrap(~term, scales = "free") +
scale_fill_brewer(palette = "Set1") +
theme_minimal() +
labs(y = NULL, x = "Estimate")
Models %>%
mutate(term = fct_recode(term,
Intercept = "(Intercept)",
Slope = "year")) %>%
ggplot(aes(estimate, fill = term)) +
geom_density(show.legend = FALSE, alpha = 0.5) +
geom_histogram(col = "black", fill = "lightgrey",
alpha = 0.5,
aes(y = ..density..)) +
facet_wrap(~term, scales = "free") +
scale_fill_brewer(palette = "Set1") +
theme_minimal() +
labs(y = NULL, x = "Estimate")
Models.coef  <- gapminder.model %>% unnest(coef)
Models.coef  <- Model %>% unnest(coef)
Models.coef  <- Models %>% unnest(coef)
Models.coef
Models.coef  <- Models %>% unnest(coef)
#Models.coef
Models %>%
mutate(term = fct_recode(term,
Intercept = "(Intercept)",
Slope = "year")) %>%
ggplot(aes(estimate, fill = term)) +
geom_density(show.legend = FALSE, alpha = 0.5) +
geom_histogram(col = "black", fill = "lightgrey",
alpha = 0.5,
aes(y = ..density..)) +
facet_wrap(~term, scales = "free") +
scale_fill_brewer(palette = "Set1") +
theme_minimal() +
labs(y = NULL, x = "Estimate")
#Models.coef
Models.coef %>%
mutate(term = fct_recode(term,
Intercept = "(Intercept)",
Slope = "year")) %>%
ggplot(aes(estimate, fill = term)) +
geom_density(show.legend = FALSE, alpha = 0.5) +
geom_histogram(col = "black", fill = "lightgrey",
alpha = 0.5,
aes(y = ..density..)) +
facet_wrap(~term, scales = "free") +
scale_fill_brewer(palette = "Set1") +
theme_minimal() +
labs(y = NULL, x = "Estimate")
#Models.coef
Models.coef %>%
mutate(term = fct_recode(term,
Intercept = "(Intercept)",
Slope = "year")) %>%
ggplot(aes(estimate, fill = term)) +
geom_density(show.legend = FALSE, alpha = 0.5) +
geom_histogram(col = "black", fill = "lightgrey",
alpha = 0.5,bins =50,
aes(y = ..density..)) +
facet_wrap(~term, scales = "free") +
scale_fill_brewer(palette = "Set1") +
theme_minimal() +
labs(y = NULL, x = "Estimate")
df %>% ggplot(aes(x = year,y =gdpPercap,group = country))+geom_line()
df %>% ggplot(aes(x = year,y =lifeExp,group = country))+geom_line()
knitr::opts_chunk$set(echo = F,warning = F,message =F)
head(gap2007)
head(gap2007)
gap2007 <-filter(continent =="Africa") %>%  df %>% filter(year == 2007)
library(knitr)
library(tidyverse)
library(gapminder)
library(rworldmap) ## plotting the data on World Map
library(countrycode) ## Converting the country name to Country code
library(dplyr) ## For manipulating, transforming, filtering, summarizing the data
library(Hmisc)
library(printr)
library(RColorBrewer)
df <- gapminder
sum(complete.cases(gapminder)) ## No missing values found
describe(gapminder_unfiltered) %>% t()
library(plotly)
countries <- c("Kenya","Uganda","Tanzania","Nigeria","Ethiopia","Egypt","SouthAfrica","USA","Brazil","Britain","China","India")
#describe(df)
Graph <- df %>% filter(country %in% countries) %>% ggplot(aes(x = year,y =gdpPercap,color = country))+geom_line()+labs(title = "GDP growth rates over the years")+theme(plot.title = element_text(hjust = 0.5)) + geom_point()
ggplotly(Graph)
df$countrycode <- countrycode(df$country, 'country.name', 'iso3c')
sPDF <- joinCountryData2Map(df %>% filter(year == 2007)
,joinCode = "ISO3"
,nameJoinColumn = "countrycode"
,mapResolution = "coarse"
, verbose = T)
colourPalette <- brewer.pal(7,'GnBu')
mapParams <- mapCountryData(sPDF,
nameColumnToPlot="gdpPercap",
addLegend=F,
colourPalette=colourPalette )
do.call(addMapLegend
,c(mapParams
,legendLabels="all"
,legendWidth=0.5
,legendIntervals="data"
,legendMar = 2))
gap2007 <- df %>% filter(year == 2007)
count <- gap2007 %>% arrange(-gdpPercap) %>% head(10) %>% select(country, gdpPercap)
count$country <- factor(count$country)
count%>% ggplot(aes(x = sort(country),y = gdpPercap))+geom_bar(stat = "identity")+coord_flip()
count%>% ggplot(aes(x = sort(country),y = gdpPercap))+geom_bar(stat = "identity",color = 'purple')+coord_flip()
count%>% ggplot(aes(x = sort(country),y = gdpPercap))+geom_bar(stat = "identity",fill = 'purple')+coord_flip()
head(gap2007)
gap2007 <-filter(continent =="Africa") %>%  df %>% filter(year == 2007)
head(gap2007)
gap2007 <-df %>% filter(continent =="Africa") %>%  df %>% filter(year == 2007)
head(gap2007)
gap2007 %>% filter(continent =="Africa") %>%  df %>% filter(year == 2007)
gap2007<-gap2007 %>% filter(continent =="Africa") %>%  df %>% filter(year == 2007)
gap2007<-gap2007 %>% filter(continent =="Africa") %>%  filter(year == 2007)
head(gap2007)
gap2007<-gap2007 %>% filter(continent =="Africa") %>%  filter(year == 2007)
count <- gap2007 %>% arrange(-gdpPercap) %>% head(10) %>% select(country, gdpPercap)
count$country <- factor(count$country)
count%>% ggplot(aes(x = sort(country),y = gdpPercap))+geom_bar(stat = "identity")+coord_flip()
head(gap2007)
max(df$year)
max(gapminder$year)
min(gapminder$year)
count%>% ggplot(aes(x = sort(country),y = gdpPercap))+geom_bar(stat = "identity",fill = "cyan")+coord_flip()
gap2007<-gap2007 %>% filter(continent =="Africa") %>%  filter(year == 2007)
count <- gap2007 %>% arrange(-gdpPercap) %>% head(10) %>% select(country, gdpPercap)
count$country <- factor(count$country)
count%>% ggplot(aes(x = sort(country),y = gdpPercap))+geom_bar(stat = "identity",fill = "teal")+coord_flip()
gap2007<-gap2007 %>% filter(continent =="Africa") %>%  filter(year == 2007)
count <- gap2007 %>% arrange(-gdpPercap) %>% head(10) %>% select(country, gdpPercap)
count$country <- factor(count$country)
count%>% ggplot(aes(x = sort(country),y = gdpPercap))+geom_bar(stat = "identity",fill = "#8D608C")+coord_flip()
sum(complete.cases(gapminder)) ## No missing values found
#describe(gapminder_unfiltered) %>% t()
knitr::opts_chunk$set(echo = T,warning = F,message =F)
sum(complete.cases(gapminder)) ## No missing values found
#describe(gapminder_unfiltered) %>% t()
head(gapminder)
update.packages(gapminder)
update.packages('gapminder')
dim(gapminder)
library(plotly)
countries <- c("Kenya","Uganda","Tanzania","Nigeria","Ethiopia","Egypt","SouthAfrica","USA","Brazil","Britain","China","India")
#describe(df)
Graph <- df %>% filter(country %in% countries) %>% ggplot(aes(x = year,y =gdpPercap,color = country))+geom_line()+labs(title = "GDP growth rates over the years")+theme(plot.title = element_text(hjust = 0.5)) + geom_point()
Graph
library(plotly)
countries <- c("Kenya","Uganda","Tanzania","Nigeria","Ethiopia","Egypt","SouthAfrica","USA","Brazil","Britain","China","India")
#describe(df)
Graph <- df %>% filter(country %in% countries) %>% ggplot(aes(x = year,y =gdpPercap,color = country))+geom_line()+labs(title = "GDP growth rates over the years")+theme(plot.title = element_text(hjust = 0.5)) + geom_point()
Graph
library(plotly)
countries <- c("Kenya","Uganda","Tanzania","Nigeria","Ethiopia","Egypt","SouthAfrica","USA","Brazil","Britain","China","India")
#describe(df)
Graph <- df %>% filter(country %in% countries) %>% ggplot(aes(x = year,y =gdpPercap,color = country))+geom_line()+labs(title = "GDP growth rates over the years")+theme(plot.title = element_text(hjust = 0.5)) + geom_point()
Graph
df$countrycode <- countrycode(df$country, 'country.name', 'iso3c')
sPDF <- joinCountryData2Map(df %>% filter(year == 2007)
,joinCode = "ISO3"
,nameJoinColumn = "countrycode"
,mapResolution = "coarse"
, verbose = T)
colourPalette <- brewer.pal(7,'GnBu')
mapParams <- mapCountryData(sPDF,
nameColumnToPlot="gdpPercap",
addLegend=F,
colourPalette=colourPalette )
do.call(addMapLegend
,c(mapParams
,legendLabels="all"
,legendWidth=0.5
,legendIntervals="data"
,legendMar = 2))
gapminder %>% head()
gapminder %>% filter(year == 2007) %>% head()
gapminder %>% filter(year == 2007) %>% head() %>% ggplot(aes(x = gdpPercap,y = lifeExp,size = pop,color = continent))+geom_point()
gapminder %>% filter(year == 2007) %>% ggplot(aes(x = gdpPercap,y = lifeExp,size = pop,color = continent))+geom_point()
gapminder %>% filter(year == 2007) %>% ggplot(aes(x = gdpPercap,y = lifeExp,size = pop,color = continent))+geom_point()+geom_jitter()
gapminder %>% filter(year == 2007) %>% ggplot(aes(x = gdpPercap,y = lifeExp,size = pop,color = continent))+geom_jitter()
gapminder %>% filter(year == 2007) %>% ggplot(aes(x = gdpPercap,y = lifeExp,size = pop,color = continent))+geom_jitter()+geom_text_repel(nudge_x = 0.065)
library(ggrepel)
gapminder %>% filter(year == 2007) %>% ggplot(aes(x = gdpPercap,y = lifeExp,size = pop,color = continent))+geom_jitter()+geom_text_repel(nudge_x = 0.065)
library(ggrepel)
gapminder %>% filter(year == 2007) %>% ggplot(aes(x = gdpPercap,y = lifeExp,size = pop,label = continent))+geom_jitter()+geom_text_repel(nudge_x = 0.065)
gapminder %>% filter(year == 2007) %>% ggplot(aes(x = gdpPercap,y = lifeExp,size = pop,color = continent,label = country))+geom_jitter()+geom_text_repel(nudge_x = 0.065)
library(ggrepel)
gapminder %>% filter(year == 2007) %>% ggplot(aes(x = gdpPercap,y = lifeExp,size = pop,color = continent,label = country))+geom_jitter()+geom_text_repel(nudge_x = 0.065)+theme(leg)+ theme(legend. position = "none")
library(ggrepel)
gapminder %>% filter(year == 2007) %>% ggplot(aes(x = gdpPercap,y = lifeExp,size = pop,color = continent,label = country))+geom_jitter()+geom_text_repel(nudge_x = 0.065)+theme(leg)+ theme(legend.position = "none")
library(ggrepel)
gapminder %>% filter(year == 2007) %>% ggplot(aes(x = gdpPercap,y = lifeExp,size = pop,color = continent,label = country))+geom_jitter()+geom_text_repel(nudge_x = 0.065)+theme(legend.position = "none")
gapminder %>% filter(year == 2007) %>% ggplot(aes(x = gdpPercap,y = lifeExp,size = pop,color = continent,label = country))+geom_jitter()+geom_text_repel(nudge_x = 0.065,show.legend = FALSE)#+theme(legend.position = "none")
gapminder %>% filter(year == 2007) %>% ggplot(aes(x = gdpPercap,y = lifeExp,size = pop/1000,color = continent,label = country))+geom_jitter()+geom_text_repel(nudge_x = 0.065)#+theme(legend.position = "none")
gapminder %>% filter(year == 2007) %>% ggplot(aes(x = gdpPercap,y = lifeExp,size = pop/1000000,color = continent,label = country))+geom_jitter()+geom_text_repel(nudge_x = 0.065)#+theme(legend.position = "none")
gapminder %>% filter(year == 2007) %>% ggplot(aes(x = gdpPercap,y = lifeExp,size = pop/1000000,color = continent,label = country))+geom_jitter()+geom_text_repel(nudge_x = 0.065)+scale_x_log10()
knitr::opts_chunk$set(echo = F,message =F,warning = F)
load('small.rda')
small_f$firm<- "Small_Firms"
load('large.rda')
non_small_f$firm <- "Non_Small_firms"
df = rbind(small_f,non_small_f)
library(dplyr)
# get just the observations that have over 15 diaries
test <- df[,grep("ID$",names(df))]
x <- test %>% group_by(ID) %>% tally() %>% filter(n>15)
df<- df %>% filter(ID %in% x$ID)
library(tidyverse)
library(reshape2)
library(knitr)
exc = 0.00069
y2 <- df[grep("firm|T_43",names(df))]
y2[y2<0] <- NA
y2$Revenue<- rowSums(y2[1:29],na.rm =T)
y2<- y2[,c("firm","Revenue")]
y2<- y2 %>% mutate(Revenue = Revenue*exc)
y2 %>% group_by(firm) %>% summarise(Mean = mean(Revenue),Median = median(Revenue)) %>% kable()
y2 %>% filter(Revenue>0) %>% group_by(firm) %>% summarise(Mean = mean(Revenue),Median = median(Revenue)) %>% kable()
y2 %>% filter(Revenue==0) %>% nrow
y2 %>% filter(Revenue==0) %>% group_by(firm) %>% count()
library(tidyverse)
library(reshape2)
library(knitr)
exc = 0.00069
y2 <- df[grep("firm|T_43",names(df))]
y2[y2<0] <- NA
y2$Revenue<- rowSums(y2[1:29],na.rm =T)
y2<- y2[,c("firm","Revenue")]
y2<- y2 %>% mutate(Revenue = Revenue*exc)
y2 %>% group_by(firm) %>% summarise(Mean = mean(Revenue),Median = median(Revenue)) %>% kable()
y2%>% group_by(firm) %>% count()
y2 %>% filter(Revenue>0) %>% group_by(ID)#group_by(firm) %>% summarise(Mean = mean(Revenue),Median = median(Revenue)) %>% kable()
library(tidyverse)
library(reshape2)
library(knitr)
exc = 0.00069
y2 <- df[grep("^ID$|firm|T_43",names(df))]
y2[y2<0] <- NA
y2$Revenue<- rowSums(y2[1:29],na.rm =T)
y2
y2[,c("ID","firm")]
y2[,!c("ID","firm")]
y2[,-c("ID","firm")]
library(data.table)
setDT(y2)
setDT(y2)
y2[,-c("ID","firm")]
y2$Revenue<- rowSums(y2[,-c("ID","firm")],na.rm =T)
library(tidyverse)
library(reshape2)
library(knitr)
library(data.table)
exc = 0.00069
y2 <- df[grep("^ID$|firm|T_43",names(df))]
y2[y2<0] <- NA
setDT(y2)
y2$Revenue<- rowSums(y2[,-c("ID","firm")],na.rm =T)
y2<- y2[,c("firm","Revenue")]
y2<- y2 %>% mutate(Revenue = Revenue*exc)
y2 %>% group_by(firm) %>% summarise(Mean = mean(Revenue),Median = median(Revenue)) %>% kable()
library(tidyverse)
library(reshape2)
library(knitr)
library(data.table)
exc = 0.00069
y2 <- df[grep("^ID$|firm|T_43",names(df))]
y2[y2<0] <- NA
setDT(y2)
y2$Revenue<- rowSums(y2[,-c("ID","firm")],na.rm =T)
y2<- y2[,c("firm","Revenue","ID")]
y2<- y2 %>% mutate(Revenue = Revenue*exc)
y2 %>% group_by(firm) %>% summarise(Mean = mean(Revenue),Median = median(Revenue)) %>% kable()
y2 %>% filter(Revenue>0) %>% group_by(firm) %>% summarise(Mean = mean(Revenue),Median = median(Revenue)) %>% kable()
y2%>% group_by(firm) %>% count()
y2 %>% filter(Revenue>0) %>% group_by(ID)#group_by(firm) %>% summarise(Mean = mean(Revenue),Median = median(Revenue)) %>% kable()
y2 %>% filter(Revenue>0) %>% group_by(ID) %>% summarise(Revenue = sum(Revenue))#group_by(firm) %>% summarise(Mean = mean(Revenue),Median = median(Revenue)) %>% kable()
y2 %>% filter(Revenue>0) %>% group_by(ID) %>% summarise(firm = firm,Revenue = sum(Revenue))#group_by(firm) %>% summarise(Mean = mean(Revenue),Median = median(Revenue)) %>% kable()
y2 %>% filter(Revenue>0) %>% group_by(ID,firm) %>% summarise(Revenue = sum(Revenue))#group_by(firm) %>% summarise(Mean = mean(Revenue),Median = median(Revenue)) %>% kable()
y2 %>% filter(Revenue>0) %>% group_by(ID,firm) %>% summarise(Revenue = sum(Revenue)) %>% group_by(firm) %>% summarise(Mean = mean(Revenue),Median = median(Revenue)) %>% kable()
y2 %>% filter(Revenue>0) %>% group_by(ID,firm) %>% summarise(Revenue = sum(Revenue)) %>% group_by(firm) %>% summarise(Mean = mean(Revenue),Median = median(Revenue)) %>% kable()
y2%>% group_by(firm) %>% count()
y2 %>% filter(Revenue>0) %>% group_by(ID,firm) %>% summarise(Revenue = sum(Revenue)) %>% group_by(firm) %>% summarise(Mean = mean(Revenue),Median = median(Revenue)) %>% kable()
#y2%>% group_by(firm) %>% count()
y1 <- df[,grep("Staff_Q_38$|firm",names(df))] # staff expenditures
y1[y1<0]<-NA
y1$Staff_cost<- rowSums(y1[1:29],na.rm =T)
y1<- y1[,c("firm","Staff_cost")]
y2$Staff_Cost <- y1$Staff_cost
y2[y2==0]<-NA
y2$Staff_perc <- y2$Staff_Cost / y2$Revenue
y2[,c("firm","Staff_perc")] %>%drop_na() %>%  group_by(firm) %>% summarise(Mean = mean(Staff_perc,na.rm =T),Median = median(Staff_perc,na.rm =T)) %>% kable()
y1
y2
y2$Staff_perc <- y2$Staff_Cost / y2$Revenue
y2[,c("firm","Staff_perc")] %>%drop_na() %>%  group_by(firm) %>% summarise(Mean = mean(Staff_perc,na.rm =T),Median = median(Staff_perc,na.rm =T)) %>% kable()
y1
y1<-y1 %>% mutate(Staff_cost = Staff_cost*exec)
y1 <- df[,grep("Staff_Q_38$|firm",names(df))] # staff expenditures
y1[y1<0]<-NA
y1$Staff_cost<- rowSums(y1[1:29],na.rm =T)
y1<- y1[,c("firm","Staff_cost")]
y1<-y1 %>% mutate(Staff_cost = Staff_cost*exec)
y1
and 1704  rows
exec
y1<-y1 %>% mutate(Staff_cost = Staff_cost*exc)
y1
y2$Staff_Cost <- y1$Staff_cost
y2[y2==0]<-NA
y2
y2$Staff_perc <- y2$Staff_Cost / y2$Revenue
y2
y2 %>% group_by(firm)
y2 %>% group_by(firm) %>% summarise(Mean =mean(Staff_cost),Median = median(Staff_Cost))
y1 <- df[,grep("Staff_Q_38$|firm",names(df))] # staff expenditures
y1[y1<0]<-NA
y1$Staff_cost<- rowSums(y1[1:29],na.rm =T)
y1<- y1[,c("firm","Staff_cost")]
y1<-y1 %>% mutate(Staff_cost = Staff_cost*exc)
y2$Staff_Cost <- y1$Staff_cost
y2[y2==0]<-NA
y2$Staff_perc <- y2$Staff_Cost / y2$Revenue
y2 %>% group_by(firm) %>% summarise(Mean =mean(Staff_cost),Median = median(Staff_Cost))
y2 %>% group_by(firm) %>% summarise(Mean =mean(Staff_Cost),Median = median(Staff_Cost))
y2 %>% group_by(firm) %>% summarise(Mean =mean(Staff_Cost,na.rm = T),Median = median(Staff_Cost,na.rm = T))
y2 %>% filter(Staff_cost==0) %>% nrow
y2 %>% filter(Staff_Cost==0) %>% nrow
y2[,c("firm","Staff_perc")] %>%drop_na() %>%  group_by(firm) %>% summarise(Mean = mean(Staff_perc,na.rm =T),Median = median(Staff_perc,na.rm =T)) %>% kable()
y2[,c("firm","Staff_perc")] %>%drop_na() %>%  group_by(firm) %>% summarise(Mean = mean(Staff_perc,na.rm =T),Median = median(Staff_perc,na.rm =T)) %>% kable()
y2[,c("firm","Staff_perc")] %>%drop_na() %>% filter(Staff_perc<1) %>% nrow
y2[,c("firm","Staff_perc")] %>%drop_na() %>% filter(Staff_perc>1) %>% nrow
y1 <- df[,grep("Staff_Q_38$|firm",names(df))] # staff expenditures
y1[y1<0]<-NA
y1$Staff_cost<- rowSums(y1[1:29],na.rm =T)
y1<- y1[,c("firm","Staff_cost")]
y1<-y1 %>% mutate(Staff_cost = Staff_cost*exc)
y2$Staff_Cost <- y1$Staff_cost
y2[y2==0]<-NA
y2$Staff_perc <- y2$Staff_Cost / y2$Revenue
y2 %>% group_by(firm) %>% summarise(Mean =mean(Staff_Cost,na.rm = T),Median = median(Staff_Cost,na.rm = T))
y2
y2[,c("firm","Staff_perc")] %>%drop_na() %>% filter(Staff_perc>1) %>% nrow
y2[,c("firm","Staff_perc")] %>%drop_na() %>% filter(Staff_perc>1) %>% nrow
y2[,c("firm","Staff_perc")] %>%drop_na() %>% filter(Staff_perc<1) %>%  group_by(firm) %>% summarise(Mean = mean(Staff_perc,na.rm =T),Median = median(Staff_perc,na.rm =T)) %>% kable()
y2[,c("firm","Staff_perc")] %>%drop_na() %>% filter(Staff_perc>1) %>% nrow
y2[,c("firm","Staff_perc")] %>%drop_na() %>% filter(Staff_perc>1) %>% nrow
y2[,c("firm","Staff_perc")] %>%drop_na() %>% filter(Staff_perc<1) %>%  group_by(firm) %>% summarise(Mean = mean(Staff_perc,na.rm =T),Median = median(Staff_perc,na.rm =T)) %>% kable()
y2[,c("firm","Staff_perc")] %>%drop_na() %>% filter(Staff_perc>1) %>% nrow
y2
y2 %>%filter(Staff_perc>1) %>%  group_by(firm) %>% summarise(Mean =mean(Staff_Cost,na.rm = T),Median = median(Staff_Cost,na.rm = T)) %>% kable()
y2 %>%filter(Staff_perc>1)
y2 %>%filter(Staff_perc<1) %>%  group_by(firm) %>% summarise(Mean =mean(Staff_Cost,na.rm = T),Median = median(Staff_Cost,na.rm = T)) %>% kable()
y1 <- df[,grep("Staff_Q_38$|firm",names(df))] # staff expenditures
y1[y1<0]<-NA
y1
y1$Staff_cost<- rowSums(y1[1:29],na.rm =T)
y1<- y1[,c("firm","Staff_cost")]
y1
y1 %>% filter(Staff_cost>0) %>% nrow
